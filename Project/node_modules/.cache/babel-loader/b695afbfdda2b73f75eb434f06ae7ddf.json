{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Houssem\\\\Desktop\\\\funcoach\\\\Project\\\\src\\\\components\\\\StudentForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@material-ui/core';\nimport { useForm, Form } from '../../components/useForm';\nconst genderItems = [{\n  id: 'male',\n  title: 'Male'\n}, {\n  id: 'female',\n  title: 'Female'\n}, {\n  id: 'other',\n  title: 'Other'\n}];\nconst initialFValues = {\n  id: 0,\n  fullName: '',\n  email: '',\n  mobile: '',\n  city: '',\n  gender: 'male',\n  departmentId: '',\n  hireDate: new Date(),\n  isPermanent: false\n};\nexport default function EmployeeForm(props) {\n  const {\n    addOrEdit,\n    recordForEdit\n  } = props;\n\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors\n    };\n    if ('fullName' in fieldValues) temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\";\n    if ('email' in fieldValues) temp.email = /$^|.+@.+..+/.test(fieldValues.email) ? \"\" : \"Email is not valid.\";\n    if ('mobile' in fieldValues) temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\";\n    if ('departmentId' in fieldValues) temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\";\n    setErrors({ ...temp\n    });\n    if (fieldValues == values) return Object.values(temp).every(x => x == \"\");\n  };\n\n  const {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    resetForm\n  } = useForm(initialFValues, true, validate);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (validate()) {\n      addOrEdit(values, resetForm);\n    }\n  };\n\n  useEffect(() => {\n    if (recordForEdit != null) setValues({ ...recordForEdit\n    });\n  }, [recordForEdit]);\n  return /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    name: \"fullName\",\n    label: \"Full Name\",\n    value: values.fullName,\n    onChange: handleInputChange,\n    error: errors.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    label: \"Email\",\n    name: \"email\",\n    value: values.email,\n    onChange: handleInputChange,\n    error: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    label: \"Mobile\",\n    name: \"mobile\",\n    value: values.mobile,\n    onChange: handleInputChange,\n    error: errors.mobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    label: \"City\",\n    name: \"city\",\n    value: values.city,\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    text: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    text: \"Reset\",\n    color: \"default\",\n    onClick: resetForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/Houssem/Desktop/funcoach/Project/src/components/StudentForm.js"],"names":["React","useState","useEffect","Grid","useForm","Form","genderItems","id","title","initialFValues","fullName","email","mobile","city","gender","departmentId","hireDate","Date","isPermanent","EmployeeForm","props","addOrEdit","recordForEdit","validate","fieldValues","values","temp","errors","test","length","setErrors","Object","every","x","setValues","handleInputChange","resetForm","handleSubmit","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Grid, } from '@material-ui/core';\r\nimport { useForm, Form } from '../../components/useForm';\r\n\r\n\r\n\r\nconst genderItems = [\r\n    { id: 'male', title: 'Male' },\r\n    { id: 'female', title: 'Female' },\r\n    { id: 'other', title: 'Other' },\r\n]\r\n\r\nconst initialFValues = {\r\n    id: 0,\r\n    fullName: '',\r\n    email: '',\r\n    mobile: '',\r\n    city: '',\r\n    gender: 'male',\r\n    departmentId: '',\r\n    hireDate: new Date(),\r\n    isPermanent: false,\r\n}\r\n\r\nexport default function EmployeeForm(props) {\r\n    const { addOrEdit, recordForEdit } = props\r\n\r\n    const validate = (fieldValues = values) => {\r\n        let temp = { ...errors }\r\n        if ('fullName' in fieldValues)\r\n            temp.fullName = fieldValues.fullName ? \"\" : \"This field is required.\"\r\n        if ('email' in fieldValues)\r\n            temp.email = (/$^|.+@.+..+/).test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n        if ('mobile' in fieldValues)\r\n            temp.mobile = fieldValues.mobile.length > 9 ? \"\" : \"Minimum 10 numbers required.\"\r\n        if ('departmentId' in fieldValues)\r\n            temp.departmentId = fieldValues.departmentId.length != 0 ? \"\" : \"This field is required.\"\r\n        setErrors({\r\n            ...temp\r\n        })\r\n\r\n        if (fieldValues == values)\r\n            return Object.values(temp).every(x => x == \"\")\r\n    }\r\n\r\n    const {\r\n        values,\r\n        setValues,\r\n        errors,\r\n        setErrors,\r\n        handleInputChange,\r\n        resetForm\r\n    } = useForm(initialFValues, true, validate);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (validate()) {\r\n            addOrEdit(values, resetForm);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (recordForEdit != null)\r\n            setValues({\r\n                ...recordForEdit\r\n            })\r\n    }, [recordForEdit])\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Grid container>\r\n                <Grid item xs={6}>\r\n                    <input\r\n                        name=\"fullName\"\r\n                        label=\"Full Name\"\r\n                        value={values.fullName}\r\n                        onChange={handleInputChange}\r\n                        error={errors.fullName}\r\n                    />\r\n                    <input\r\n                        label=\"Email\"\r\n                        name=\"email\"\r\n                        value={values.email}\r\n                        onChange={handleInputChange}\r\n                        error={errors.email}\r\n                    />\r\n                    <input\r\n                        label=\"Mobile\"\r\n                        name=\"mobile\"\r\n                        value={values.mobile}\r\n                        onChange={handleInputChange}\r\n                        error={errors.mobile}\r\n                    />\r\n                    <input\r\n                        label=\"City\"\r\n                        name=\"city\"\r\n                        value={values.city}\r\n                        onChange={handleInputChange}\r\n                    />\r\n\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n             \r\n                    <div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            text=\"Submit\" />\r\n                        <button\r\n                            text=\"Reset\"\r\n                            color=\"default\"\r\n                            onClick={resetForm} />\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Form>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}